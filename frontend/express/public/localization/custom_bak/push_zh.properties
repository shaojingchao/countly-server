push-notification.title = 推送通知
push-notification.description = 所有发送的推送通知和响应中执行的操作的概述。
push-notification.one-time = 一次性通知
push-notification.automated = 自动通知
push-notification.transactional = API 通知
push-notification.total-app-users = 应用用户总数
push-notification.enabled-users = 启用通知的用户
push-notification.enabled-users-percentage = 启用的用户百分比
push-notification.enabled-users-percentage-description = 同意接收通知的用户数，以占应用程序用户总数的百分比表示。
push-notification.platform-filter-label-one-time = 一次性通知
push-notification.platform-filter-label-automatic = 自动通知
push-notification.platform-filter-label-transactional = 交易通知
push-notification.platform-filter-all = 所有平台
push-notification.platform-filter-android = Android
push-notification.platform-filter-ios = IOS
push-notification.status-filter-all = 所有消息
push-notification.create-button = 新消息
push-notification.time-period = 时间段
push-notification.created-by = 创建者
push-notification.unknown-error = 发生未知错误。请稍后重试或联系支持团队。
push-notification.sent-serie-name = 已发送通知
push-notification.sent-serie-description = 在选定时间段内发送的通知总数。
push-notification.actions-performed-serie-name = 执行的操作
push-notification.actions-performed-serie-description = 在选定的时间段内，用户为响应发送的通知而执行的操作总数。
push-notification.table-notification-name = 通知名称
push-notification.table-status = 状态
push-notification.table-created = 已创建
push-notification.table-date-sent = 发送日期/计划
push-notification.table-sent = 已发送
push-notification.table-actioned = 已执行
push-notification.table-created-by = 创建者
push-notification.table-message-content = 消息内容
push-notification.duplicate = 重复
push-notification.delete = 删除
push-notification.resend = 重新发送
push-notification.approve = 批准
push-notification.reject = 拒绝
push-notification.start = 开始
push-notification.stop = 停止
push-notification.edit-draft = 编辑草稿
push-notification.edit = 编辑
push-notification.sent = 已发送
push-notification.sending = 发送中
push-notification.created = 已创建
push-notification.draft = 草稿
push-notification.waiting-for-approval = 等待批准
push-notification.aborted = 中止
push-notification.failed = 失败
push-notification.stopped = 已停止
push-notification.scheduled = 预定
push-notification.rejected = 已拒绝
push-notification.time-chart-period-weekly = 每周
push-notification.time-chart-period-monthly = 每月
push-notification.time-chart-period-daily=每日
push-notification.now = 现在
push-notification.right-before-sending-the-message = 发送消息之前
push-notification.segmented-push-enabled-users = 分段推送用户
push-notification.delivery-type = 传递类型
push-notification.delivery-timeframe = 交货时间
push-notification.delivery-timeframe-description = 选择您希望自动通知开始发送给用户的时间。
push-notification.trigger-type = 触发器类型
push-notification.ios-badge-number-setting = IOS 徽章编号
push-notification.ios-json-data-setting = IOS JSON 数据
push-notification.ios-user-data-setting = IOS 用户数据
push-notification.android-badge-number-setting = Android 徽章编号
push-notification.android-json-data-setting = Android JSON 数据
push-notification.android-user-data-setting = 安卓用户数据
push-notification.drill-section = 推送
internal-events.[CLY]_push_sent = 推送已发送
internal-events.[CLY]_push_action = 推送操作
push-notification.android = Android
push-notification.ios = iOS

＃ 抽屉
push-notification.drawer-step-one = 信息和定位
push-notification.drawer-step-two = 交付
push-notification.drawer-step-three = 推送内容
push-notification.drawer-step-four = 回顾
push-notification.save = 保存
push-notification.send-for-approval = 发送以供批准
push-notification.save-as-draft = 保存为草稿
push-notification.create-one-time-notification = 创建一次性推送通知
push-notification.create-automated-notification = 创建自动推送通知
push-notification.create-transactional-notification = 创建 API 推送通知
push-notification.notification-name = 通知名称
push-notification.notification-name-description = 设置推送通知的名称（可选）。
push-notification.enter-notification-name = 输入通知名称
push-notification.platforms = 平台
push-notification.android = Android
push-notification.ios = iOS
push-notification.targeting = 定位
push-notification.targeting-tooltip = 选择如何定位将收到通知的用户。
push-notification.all-push-enabled-users = 所有启用推送的用户
push-notification.all-push-enabled-users-description = 发送给所有启用接收通知的用户。
push-notification.use-segmentation = 使用分段
push-notification.use-segmentation-description = 根据群组或位置等特定细分发送给用户。
push-notification.push-enabled-users = 启用推送的用户
push-notification.send-to-users-in-cohorts = 发送给当前在选定群组中的用户
push-notification.send-to-users-in-cohorts-description = 选择有资格接收通知的用户群组。
push-notification.send-to-users-in-locations = 发送给当前处于选定地理位置的用户
push-notification.send-to-users-in-locations-description = 选择您要向其发送通知的用户的地理位置（例如位于法国的用户）。
push-notification.select-event-to-set-trigger = 选择一个或多个事件来设置触发器
push-notification.select-event-to-set-trigger-description = 选择一个或多个事件来设置触发器。
push-notification.select-cohort-to-set-trigger = 选择一个或多个队列来设置触发器
push-notification.select-cohort-to-set-trigger-description = 重新计算上述群组将自动触发发送过程。
push-notification.select-location = 请选择一个位置
push-notification.when-to-determine-users = 何时确定用户？
push-notification.when-to-determine-users-tooltip = 何时确定将收到通知的启用推送的用户数量。
push-notification.determine-users-before = 在发送消息之前确定用户
push-notification.determine-users-now = 现在确定用户
push-notification.triggers = 触发器
push-notification.triggers-description = 选择将自动触发消息发送过程的用户行为。
push-notification.cohorts-entry = 队列条目
push-notification.cohorts-entry-description = 当用户进入您选择的任何群组时触发。
push-notification.cohorts-exit =队列退出
push-notification.cohorts-exit-description = 当用户退出您选择的任何群组时触发。
push-notification.performed-events = 执行的事件
push-notification.performed-events-description = 当用户执行选定的事件时触发。
push-notification.select-event = 请选择一个事件
push-notification.cohorts =队列
push-notification.geolocations = 地理位置
push-notification.events = 事件
push-notification.delivery-date-calculation = 交货日期计算
push-notification.behavior-trigger-not-met = 不再满足触发条件时的行为
push-notification.start-date = 开始日期
push-notification.set-start-date = 设置开始日期
push-notification.set-start-date-tooltip = 选择您希望向用户发送通知的时间。
push-notification.timezone-description = 选择您的推送通知是否需要调整时区差异。
push-notification.end-date = 结束日期
push-notification.set-end-date = 设置结束日期
push-notification.set-end-date-tooltip = 选择停止发送自动推送通知的日期。
push-notification.delivery-method = 发送方式
push-notification.delivery-method-description = 选择在用户进入群组后多久发送推送通知。
push-notification.capping = 上限
push-notification.capping-tooltip = 选择是否限制发送给用户的自动推送通知的数量。
push-notification.no-capping = 无上限
push-notification.no-capping-description = 每当用户进入或退出队列时都会发送通知。
push-notification.relative-to-the-date-event-server = 相对于事件到达服务器的日期
push-notification.relative-to-the-date-event-device = 相对于设备上发生的事件的日期
push-notification.send-anyway = 仍然发送
push-notification.cancel-when-user-exits-cohort = 当用户退出选定群组时取消
push-notification.cancel-when-user-exits-cohort-description = 如果用户不再在选定的队列中，则停止发送消息。
push-notification.send-now = 立即发送
push-notification.send-now-description = 合成完成后立即发送推送通知。
push-notification.scheduled = 预定
push-notification.schedule-for-later = 稍后安排
push-notification.delivery-time = 交货时间
push-notification.delivery-time-tooltip = 为您的消息设置一个可选的发送时间
push-notification.timezone = 时区
push-notification.timezone-tooltip = 选择您的推送通知是否需要调整时区差异。
push-notification.deliver-to-all-users-same-time = 同时发送给所有用户
push-notification.deliver-to-all-users-same-time-description = 在特定时间发送给所有用户。这可能会导致不同时区的用户在白天或晚上的不同时间收到通知。
push-notification.deliver-to-all-users-device-time = 根据设备时区在用户本地时间传送
push-notification.deliver-to-all-users-device-time-description = 在他们自己的时区和用户设备的时间设置的特定时间发送给用户。
push-notification.what-if-past-scheduled = 如果用户超过预定时间怎么办？
push-notification.what-if-past-scheduled-tooltip = 选择如果用户超过推送通知的预定时间会发生什么。
push-notification.do-not-send-message = 不要发送消息
push-notification.deliver-next-day = 第二天发送消息
push-notification.immediately = 立即
push-notification.immediately-description = 重新计算触发群组后立即发送此消息。
push-notification.delayed = 延迟
push-notification.days = 天数
push-notification.hours = 小时数
push-notification.capped = 上限
push-notification.capped-description = 当达到一定数量的通知时，将不再发送推送通知。
push-notification.maximum-messages-per-user = 每个用户的最大消息数
push-notification.maximum-messages-per-user-tooltip = 设置自动推送通知的数量限制。
push-notification.messages = 消息
push-notification.minimum-time-between-messages = 消息之间的最短时间
push-notification.minimum-time-between-messages-tooltip = 设置发送通知的最短时间，以避免向用户发送垃圾邮件。
push-notification.expiration-time = 到期时间
push-notification.expiration-time-tooltip = 设置由于设备连接问题或其他错误而未发送的推送通知将停止重试发送的天数。
push-notification.notification-type = 通知类型
push-notification.compose-message = 撰写消息
push-notification.compose-message-tooltip = 填写您希望发送给用户的消息的详细信息。
push-notification.allow-to-set-different-content = 允许为不同的本地化设置不同的消息内容
push-notification.default-message-is-required = 需要默认消息
push-notification.content-message = 内容消息
push-notification.silent-message = 静音消息
push-notification.message-title = 消息标题
push-notification.add-variable = 添加变量
push-notification.message-content = 消息内容
push-notification.clear-and-shorter-messages = 清晰和较短的消息通常有更多的对话......
push-notification.buttons = 按钮
push-notification.buttons-tooltip = 设置每个操作按钮的文本以及它应该引导用户访问的链接或页面。
push-notification.add-first-button = +添加第一个按钮
push-notification.add-second-button = +添加第二个按钮
push-notification.enter-x-button = 输入 xButton
push-notification.enter-button-url = 输入按钮 URL 或深层链接
push-notification.media-url = 媒体 URL
push-notification.media-url-description = 将媒体添加到您的消息中 - 输入您想要包含的图像的 URL。
push-notification.enter-media-url = 输入媒体 URL
push-notification.platform-settings = 平台设置
push-notification.platform-settings-description = 设置特定于您的用户将在其上看到消息的平台的媒体和其他消息规范。
push-notification.sound-file-name = 声音文件名
push-notification.enter-sound-file-name = 输入声音文件名
push-notification.sound-file-name-description = 添加一个自定义声音文件，它会随着您的消息响起。
push-notification.add-badge-number = 添加徽章编号
push-notification.enter-badge-number = 输入徽章编号
push-notification.add-badge-number-description = Android 平台需要额外的步骤。请参考Android SDK。
push-notification.media-url-platform-description = 添加特定于平台的媒体 URL。这将覆盖前一个抽屉中包含的媒体。
push-notification.subtitle = 副标题
push-notification.enter-your-subtitle = 输入您的副标题
push-notification.subtitle-description = 为您的消息添加副标题。
push-notification.on-click-url = 点击 URL
push-notification.enter-on-click-url = 输入点击 URL
push-notification.on-click-url-description = 添加当用户点击抽屉中的消息时打开的 URL 链接。
push-notification.send-json = 发送 JSON
push-notification.enter-json-data = 输入 JSON 数据
push-notification.send-json-description = 添加特定于应用程序的 JSON 数据以及标准内容。
push-notification.send-user-data = 发送用户数据
push-notification.select-user-data = 选择用户数据
push-notification.send-user-data-description = 选择要在您的通知负载中发送的用户属性。
push-notification.icon = 图标
push-notification.icon-description = 设置 Android 通知图标。
push-notification.enter-icon = 输入图标
push-notification.review-message = 查看消息
push-notification.review-message-tooltip = 查看您推送通知的所有细节。
push-notification.message-name = 消息名称
push-notification.review-title = 标题
push-notification.content = 内容
push-notification.button-text = 按钮文本
push-notification.button-url = 按钮 URL
push-notification.ios-media-url = iOS 媒体 URL
push-notification.android-media-url = Android 媒体 URL
push-notification.ios-badge-number = IOS 徽章编号
push-notification.ios-json-data = iOS JSON 数据
push-notification.ios-user-data = iOS 用户数据
push-notification.android-badge-number = Android 徽章编号
push-notification.android-json-data = Android JSON 数据
push-notification.android-user-data = 安卓用户数据
push-notification.current-number-of-users = 当前用户数
push-notification.when-to-determine = 何时确定
push-notification.when-to-determine-description = 何时确定将收到通知的启用推送的用户数量。
push-notification.delivery = 交付
push-notification.delivery-description = 选择您希望向用户发送通知的时间。
push-notification.scheduled-for = 计划于
push-notification.message-will-expire-after = 消息将在 {0} 天 {1} 小时后过期
push-notification.maximum-messages = 最多 {0} 条消息
push-notification.minimum-days-and-hours = 消息之间最少 {0} 天 {1} 小时
push-notification.confirmation = 确认
push-notification.testing = 测试
push-notification.you-can-send-the-test-message = 您可以向测试用户发送测试消息
push-notification.testing-tooltip = 向应用程序的测试用户发送推送通知
push-notification.send-to-test-users = 发送给测试用户
push-notification.confirmation-uppercase = 确认
push-notification.confirmation-uppercase-description = 确认说明
push-notification.i-am-ready-to-send = 我已准备好将此消息发送给真实用户
push-notification.was-successfully-saved = 推送通知消息已成功保存
push-notification.was-successfully-sent-to-test-users = 推送通知消息已成功发送给测试用户
push-notification.was-successfully-approved = 推送通知已成功批准
push-notification.was-successfully-rejected = 推送通知已被成功拒绝
push-notification.was-successfully-deleted = 推送通知已成功删除
push-notification.was-successfully-started = 推送通知已成功启动
push-notification.was-successfully-stopped = 推送通知已成功停止

# 添加用户属性
push-notification.event-properties = 事件属性
push-notification.user-properties = 用户属性
push-notification.custom-properties = 自定义属性
push-notification.add-user-property = 添加用户属性
push-notification.api-property = 添加用户属性
push-notification.search-in-properties = 在属性中搜索
push-notification.select-property = 选择属性
push-notification.enter-value = 输入值
push-notification.start-with-capital-letter = 使用户属性以大写字母开头
push-notification.fallback-value = 回退值
push-notification.fallback-value-desc = 在用户配置文件没有此变量的情况下将使用的默认值
push-notification.remove = 删除
push-notification.confirm = 确认
push-notification.internal-properties = 内部属性
push-notification.external-properties = 外部属性
push-notification-fallback-value-description = 用户的 \"{0}\" 回退到 \"{1}\" 的属性


＃ 细节
push-notification-details.back-to = 返回推送通知
push-notification-details.localization-filter-label = 本地化
push-notification-details.localization-filter-all = 所有本地化
push-notification-details.summary-header = 通知摘要
push-notification-details.summary-header-description = 通知消息及其详细信息的概述。
push-notification-details.message-tab = 消息内容
push-notification-details.targeting-tab = 定位和投放
push-notification-details.errors-tab = 错误
push-notification-details.users-targeted-chart = 目标用户
push-notification-details.sent-messages-chart = 已发送消息
push-notification-details.and-label = 和
push-notification-details.message-id = 消息 ID
push-notification-details.results-for = 结果
push-notification-details.created = 已创建
push-notification-details.created-by = {1} 创建 {0}

push-notification-details.message-title = 标题
push-notification-details.message-content = 内容
push-notification-details.message-first-button-label = 第一个按钮文本
push-notification-details.message-first-button-url = 第一个按钮 URL
push-notification-details.message-second-button-label = 第二个按钮文本
push-notification-details.message-second-button-url = 第二个按钮 URL
push-notification-details.message-media-url = 媒体 URL
push-notification-details.ios-message-media-url = IOS 媒体 URL
push-notification-details.android-message-media-url = Android 媒体 URL

push-notification-details.targeting-sub-header = 定位
push-notification-details.targeted-users = 目标用户
push-notification-details.geolocation = 地理定位
push-notification-details.when-to-determine = 何时确定
push-notification-details.delivery-sub-header = 交付
push-notification-details.delivery-type = 传递类型
push-notification-details.scheduled-for = 计划于
push-notification-details.expiration-time = 到期时间
push-notification-details.message-expires-after = 消息在 {0} 天 {1} 小时后过期
push-notification-details.no-errors-found = 没有发现错误
push-notification.users-targeted = 目标用户
push-notification.users-targeted-description = 接收所选通知的目标用户总数。
push-notification.sent-notifications = 已发送通知
push-notification.sent-notifications-description = 发送的通知总数。
push-notification.clicked-notifications = 点击通知
push-notification.clicked-notifications-description = 点击或响应的通知总数。
push-notification.failed = 失败
push-notification.failed-description = 未能发送的通知总数。
push-notification.no-errors-found = 没有发现错误
push-notification.affected-users = 受影响的用户
push-notification.error-description = 描述
push-notification.error-code = 错误代码
push-notification.users = 用户
push-notification.back-to-push-notification-details = 返回推送通知

# 移动预览组件
push-notification.mobile-preview-default-app-name = 您的应用程序名称
push-notification.mobile-preview-default-title = 您的消息标题
push-notification.mobile-preview-default-content = 您的消息内容

＃ 应用程序设置
push-notification.ios-settings = iOS 设置
push-notification.authentication-type = 认证类型
push-notification.key-file-p8 = 密钥文件 (P8)
push-notification.key-file-p12 = 沙盒 + 生产证书 (P12)
push-notification.key-file-already-uploaded = 密钥文件 {0} 已经上传
push-notification.choose-file = 选择文件
push-notification.key-id = 密钥 ID
push-notification.team-id = 团队 ID
push-notification.bundle-id = 捆绑 ID
push-notification.passphrase = 密码短语
push-notification.android-settings = Android (Google FCM)
push-notification.firebase-key = Firebase 密钥
push-notification.huawei-settings = Android（华为推送服务）
push-notification.huawei-app-id = App ID
push-notification.huawei-app-secret = App Secret
push-notification.rate-limit = 速率限制
push-notification.maximum-notifications-per-period = 每个周期安排的最大通知数
push-notification.period-in-seconds = 周期持续时间（秒）
push-notification.test-users = 测试用户
push-notification.test-users-description = 测试用户描述
push-notification.define-new-user = +定义新用户
push-notification.user-definition = 用户定义
push-notification.user-definition-description = 您可以在发送推送通知之前向定义为测试用户的用户发送测试通知
push-notification.see-user-list = 查看用户列表
push-notification.define-new-user-title = 定义新用户
push-notification.add-test-users-label = 添加用户
push-notification.definition-type = 定义类型
push-notification.define-with-user-id = 使用用户 ID 定义
push-notification.define-with-cohort = 定义队列
push-notification.enter-user-id = 输入用户 ID
push-notification.select-one-or-more-cohorts = 选择一个或多个队列来设置触发器
push-notification.select-one-or-more-cohorts-description = 重新计算上述群组将自动触发发送过程。
push-notification.select-cohort = 请选择一个队列
push-notification.user-list = 用户列表
push-notification.username = 用户名
push-notification.user-id = 用户 ID
push-notification.cohort-name = 群组名称
push-notification.cancel = 取消
push-notification.i-understand-delete-key = 我明白了，删除这个密钥
push-notification.delete-key = 删除密钥
push-notification.test-users-were-successfully-removed = 测试用户已成功删除
push-notification.test-users-were-successfully-added = 测试用户已成功添加

#全局设置
push.plugin-title = 推送通知
push.proxyhost = 代理主机名
push.proxypass = 代理密码
push.proxyport = 代理端口
push.proxyuser = 代理用户名
push.proxyhttp = 连接到代理服务器时不要使用 HTTPS
push.proxyunauthorized = 不要检查代理 HTTPS 证书
push.sendahead = 发送通知安排到未来这么多毫秒
push.connection_retries = 连接重试次数
push.connection_factor = 重试之间指数退避的时间因子
push.pool_pushes = 流批次中的通知数
push.pool_bytes = 二进制流批次中的字节数
push.pool_concurrency = 最大同类型连接数
push.pool_pools = 最大总连接数

#其他视图的抽屉
push-notification.send-message-to-users = 向用户发送消息
push-notification.select-max-two-metrics = 选择最多 2 个指标
# 错误代码
push-notification.error-code.400.desc = 400 错误请求
push-notification.error-code.401.desc = 401 未授权 请确保您的推送通知凭据有效。
push-notification.error-code.403.desc = 403 未通过身份验证。请确保您的推送通知凭据有效。
push-notification.error-code.405.desc = 405 错误方法
push-notification.error-code.413.desc = 413 负载太大。请减小通知负载大小。
push-notification.error-code.429.desc = 429 请求太多。请稍后再试。
push-notification.error-code.500.desc = 500 服务器错误。请稍后再试。
push-notification.error-code.503.desc = 503 关机。请稍后再试。
push-notification.error-code.Rejected.desc = 消息在发送期间处于非活动状态。
push-notification.error-code.NoAudience.desc = 没有要向其发送此通知的用户。可能是这条消息的过滤器太严格了。
push-notification.error-code.NoApp.desc = 发送通知时未找到应用程序。
push-notification.error-code.NoMessage.desc = 发送通知时未找到消息。
push-notification.error-code.NoCredentials.desc = 发送通知时未找到推送通知凭据。
push-notification.error-code.NoConnection.desc = 无法连接到推送通知提供商，请检查 Countly 主机是否提供 APN / FCM / HPK。如果您使用代理服务器，请检查它是否已启动并正在运行。
push-notification.error-code.NoProxyConnection.desc = 使用代理服务器时无法连接到推送通知提供商。请检查代理服务器设置。
push-notification.error-code.TooLateToSend.desc = Countly 无法及时发送这些通知（从预定日期起 1 小时）。
push-notification.error-code.ExpiredCreds.desc = 推送通知凭据可能已过期。请上传新的凭据。
push-notification.error-code.BadDeviceToken.desc = Countly 服务器从您的应用程序收到的推送令牌被 APNS 拒绝为无效。请确保您在 SDK 的初始配置中正确设置了 `pushTestMode` 属性。另请确保供应配置文件（开发或分发）有效，捆绑包 ID 正确且权利设置正确。
push-notification.error-code.MissingTopic.desc = 服务器无法解析证书，请确保您使用的是通用证书，如果是，请联系支持人员。
push-notification.error-code.DeviceTokenNotForTopic.desc = APNS 证书与您的应用程序的 Bundle ID 不对应。
push-notification.error-code.TopicDisallowed.desc = 不允许向该主题发送推送通知。Apple 拒绝向该主题发送推送通知。Certificates, Identifiers & Profiles 门户中很可能没有这样的应用程序。
push-notification.error-code.InvalidProviderToken.desc = 请检查您的授权密钥文件、团队 ID 和捆绑 ID - 其中一些无效。
push-notification.error-code.MissingRegistration.desc = 请联系客户支持。
push-notification.error-code.InvalidRegistration.desc = 可能您修改了 SDK 处理 FCM 令牌的方式。请确保您做对了或联系支持人员。
push-notification.error-code.InvalidParameters.desc = 无效的请求参数。请将服务器日志发送给 Countly 支持。
push-notification.error-code.MismatchSenderId.desc = 无效的发件人 ID。SDK 很可能会与您应用中的其他 Firebase SDK 竞争令牌。<br />请覆盖我们的 SDK 或其他 SDK 获取令牌的方式，以便它们最终使用相同的令牌。
push-notification.error-code.MessageTooBig.desc = 消息太大，Google 拒绝传送。
push-notification.error-code.InvalidDataKey.desc = 消息包含无效数据密钥，请检查：
push-notification.error-code.InvalidTtl.desc = 请联系客户支持。
push-notification.error-code.DeviceMessageRateExceeded.desc = 您向同一设备发送消息的频率超过了 Google 允许的频率，请降低频率。
push-notification.error-code.TopicsMessageRateExceeded.desc = 您向同一主题发送消息的频率超过了 Google 允许的频率，请降低频率。
push-notification.error-code.Unavailable.desc = Google 服务器意外返回 HTTP 错误 200 不可​​用。请稍后再试。
push-notification.error-code.InternalServerError.desc = Google 服务器意外返回 HTTP 错误 200 InternalServerError。请稍后再试。
push-notification.error-code.NotRegistered.desc = FCM 令牌过期
push-notification.error-code.InvalidRegistration.desc = FCM 令牌无效
push-notification.error-code.InvalidPackageName.desc = 您的应用程序包名称与 FCM 中指定的包名称不对应
push-notification.error-code.IllegalToken.desc = 华为令牌已过期或无效
push-notification.error-code.MessageBodyTooBig.desc = 华为通知消息体太大
push-notification.error-code.TooManyTokens.desc = 发送给华为的令牌太多，请联系 Countly 支持。
push-notification.error-code.NotAuthorizedPriority.desc = 您无权发送高优先级华为通知。
push-notification.error-code.InternalHuaweiError.desc = 华为内部服务器错误。
push-notification.error-code.SessionClosedOrDestroyed.desc = APN 会话已被 APN 关闭。因此，这么多通知已被丢弃。请检查与 APN 服务器的连接并检查 Countly 日志以获取确切的错误消息。

push-notification.error-code.TooLateToSend.desc = 推送通知消息已被丢弃，因为到达时间至少比预期晚 60 分钟。
push-notification.error-code.del = 消息已删除
push-notification.error-code.del.desc = 由于消息被删除，推送通知消息已被丢弃。
push-notification.error-code.consent = 同意取消
push-notification.error-code.consent.desc = 由于删除了推送同意，推送通知消息已从队列中删除。
push-notification.error-code.purge.desc = 推送通知消息已从队列中删除，因为用户数据已被清除。
push-notification.error-code.aborted = 中止
push-notification.error-code.aborted.desc = 在发生不可恢复的错误后，推送通知消息已从队列中删除。请查看我们的<a target="blank" class="el-link" href="https://support.count.ly/hc/en-us/articles/360037270012-Push-notifications#troubleshooting">疑难解答</ a> 文档。<br />请阅读以下<a target="blank" class="el-link" href="https://support.count.ly/hc/zh-cn/articles/360037270012#resend-failed-notifications "> 说明 </a> 如果您想向尚未收到推送通知的用户重新发送推送通知。
push-notification.error-code.ExpiredToken = 过期令牌
push-notification.error-code.ExpiredToken.desc = 影响用户数量的令牌已过期。

# 系统日志
systemlogs.action.push_message_created = 已创建推送通知
systemlogs.action.push_message_draft = 已创建草稿推送通知
systemlogs.action.push_credentials_update = 推送凭据已更新
systemlogs.action.push_message_deleted = 推送通知已删除
systemlogs.action.push_message_updated = 推送通知已更新
systemlogs.action.push_message_activated = 推送通知激活
systemlogs.action.push_message_deactivated = 推送通知已停用
systemlogs.action.push_message_test = 发送测试推送通知